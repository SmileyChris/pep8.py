pep8.py 0.1.0

A tool to automatically check your Python code against some of the coding conventions in PEP 8 (Style Guide for Python Code). The architecture of pep8.py makes it very easy to add more checks. The output is parseable to let your editor jump directly to the position of each error.

Example usage and output:
$ pep8.py /usr/lib/python2.4/optparse.py
/usr/lib/python2.4/optparse.py:69:11: E401 multiple imports on one line
/usr/lib/python2.4/optparse.py:77:1: E302 expected 2 blank lines, found 1
/usr/lib/python2.4/optparse.py:88:5: E301 expected 1 blank line, found 0
/usr/lib/python2.4/optparse.py:347:31: E211 whitespace before '('
/usr/lib/python2.4/optparse.py:357:17: E201 whitespace after '{'
/usr/lib/python2.4/optparse.py:362:1: E302 expected 2 blank lines, found 1
/usr/lib/python2.4/optparse.py:370:1: E302 expected 2 blank lines, found 1
/usr/lib/python2.4/optparse.py:472:21: E201 whitespace after '{'
/usr/lib/python2.4/optparse.py:472:29: E221 multiple spaces before operator
/usr/lib/python2.4/optparse.py:878:5: E301 expected 1 blank line, found 2

You can also make pep8.py show lines of source code, and even the relevant text from PEP 8:
$ pep8.py --show-source --show-pep8 testsuite/E111.py
testsuite/E111.py:2:3: E111 indentation is not a multiple of four
  print x
  ^
    Use 4 spaces per indentation level.

    For really old code that you don't want to mess up, you can continue to
    use 8-space tabs.

The source code (and a regression test suite) is available from the subversion repository:
http://svn.browsershots.org/trunk/devtools/pep8/

You can also browse the source code and change history online:
http://trac.browsershots.org/browser/trunk/devtools/pep8/pep8.py

Your feedback is more than welcome. Write email to johann@browsershots.org or post bugs and feature requests here:
http://trac.browsershots.org/newticket?component=devtools

And here's PEP 8 (Style Guide for Python Code):
http://www.python.org/dev/peps/pep-0008/

Cheers,
Johann
